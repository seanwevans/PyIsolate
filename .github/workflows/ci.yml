name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install -e .[dev]
          pre-commit install-hooks
      - name: Run isort
        id: run_isort
        continue-on-error: true
        run: pre-commit run isort --all-files
      - name: Commit import sorting changes
        if: steps.run_isort.outcome == 'failure'
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git pull
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git commit -am "chore: sort imports"
            BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
            git push origin HEAD:$BRANCH
          fi
      - name: Run black
        id: run_black
        continue-on-error: true
        run: pre-commit run black --all-files
      - name: Commit formatting changes
        if: steps.run_black.outcome == 'failure'
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git pull
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git commit -am "chore: format with black"
            BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
            git push origin HEAD:$BRANCH
          fi
      - name: Run pylint
        id: pylint
        run: |
          set +e
          pre-commit run pylint --all-files | tee pylint.log
          ret=${PIPESTATUS[0]}
          grep -oE 'rated at [0-9.]+' pylint.log | awk '{print $3}' > score.txt
          echo "score=$(cat score.txt)" >> "$GITHUB_OUTPUT"
          exit 0      
      - name: Run flake8
        run: pre-commit run flake8 --all-files

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install -e .[dev]
          pre-commit install-hooks
      - name: Run tests with coverage
        run: coverage run -m pytest
      - name: Generate coverage report
        run: |
          coverage xml -o coverage.xml          
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.xml
